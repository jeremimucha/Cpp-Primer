/* Exercises Section 15.8
Exercise 15.28: Define a  vector to hold  Quote objects but put  Bulk_quote
objects into that  vector . Compute the total  net_price of all the elements in
the  vector .
Exercise 15.29: Repeat your program, but this time store  shared_ptr s to
objects of type  Quote . Explain any discrepancy in the sum generated by the
this version and the previous program. If there is no discrepancy, explain
why there isnâ€™t one.
*/
#include <iostream>
#include <vector>
#include <memory>
#include "quote.h"
using std::cout;
using std::endl;
using std::vector;
using std::shared_ptr;
using std::make_shared;


int main()
{
    Quote q("Quote", 1.1);
    Bulk_quote bq("Bulk Quote", 2.2, 2, 0.2);
    Limited_quote lq("Limited Quote", 3.3, 3, 0.3);

    cout << "vector<Quote>:\n";
    vector<Quote> vq;
    vq.push_back(q);    // will match Quote copy ctor
    vq.push_back(bq);   // will match Quote copy ctor via upcast
    vq.push_back(lq);   // will match Quote copy ctor via upcast

    for(const Quote& q : vq)
        q.debug();

    cout << "\nvector<shared_ptr<Quote>>:\n";
    vector<shared_ptr<Quote>> vspq;
    vspq.push_back(make_shared<Quote>(q));
    vspq.push_back(make_shared<Bulk_quote>(bq));
    vspq.push_back(make_shared<Limited_quote>(lq));

    for(const shared_ptr<Quote> sq : vspq){
        sq->debug();
    }
}
